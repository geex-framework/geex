name: publish
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test tags in format of refs/tags/v*'
        required: true
        type: string
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish-nuget-package:
    runs-on: ubuntu-latest
    steps:
      - name: extract-version-from-input
        if: ${{ '$GITHUB_REF' == '' }}
        run: |
            echo "ref=$VERSION" >> $GITHUB_ENV

      - name: extract-version-from-ref
        if: ${{ '$GITHUB_REF' != '' }}
        run: |
            echo "ref=$GITHUB_REF" >> $GITHUB_ENV

      - name: Extract version number
        id: version
        run: |
          REF=${{env.ref}}
          echo "Ref name is $REF"
          if [[ "${REF#refs/tags/v}" =~ ^([0-9|\.]+)-?([a-z]+[0-9]*)?$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            SUFFIX="${BASH_REMATCH[2]}"
            echo "Extracted version and suffix from prerelease tag."
            echo "version=$VERSION"
            echo "suffix=$SUFFIX"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.410
          
      - name: Restore dependencies
        run: dotnet restore ./framework_modules/framework_modules.sln
        
      - name: Build projects
        run: |
          dotnet build --configuration Release ./framework_modules/Geex.Analyzer/src/Geex.Analyzer.csproj
          dotnet build --configuration Release ./framework_modules/framework_modules.sln /p:IncludeSourceGeneratedFiles=true
        
      - name: Generate NuGet release packages
        if: ${{ steps.version.outputs.suffix == '' }}
        env:
          VERSION: ${{ steps.version.outputs.version }}
          SUFFIX: ${{ steps.version.outputs.suffix }}
        run:  |
          dotnet pack ./framework_modules/Geex.Casbin/src/Geex.Casbin.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MongoDB.Entities/src/Geex.MongoDB.Entities.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common/src/Geex.Extensions.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Abstractions/src/Geex.Abstractions.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.AuditLogs/src/Geex.Extensions.AuditLogs.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Analyzer/src/Geex.Analyzer.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Accounting/src/Geex.Extensions.Accounting.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Authentication/src/Geex.Extensions.Authentication.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Authorization/src/Geex.Extensions.Authorization.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.BackgroundJob/src/Geex.Extensions.BackgroundJob.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.BlobStorage/src/Geex.Extensions.BlobStorage.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Identity/src/Geex.Extensions.Identity.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Logging/src/Geex.Extensions.Logging.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Messaging/src/Geex.Extensions.Messaging.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.MultiTenant/src/Geex.Extensions.MultiTenant.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Settings/src/Geex.Extensions.Settings.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MediatX/MediatX/MediatX.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MediatX/MediatX.RabbitMQ/MediatX.RabbitMQ.csproj --configuration Release --no-build --output ./nupkg /p:PackageVersion=${{env.VERSION}}

      - name: Generate NuGet prerelease packages
        if: ${{ steps.version.outputs.suffix != '' }}
        env:
          VERSION: ${{ steps.version.outputs.version }}
          SUFFIX: ${{ steps.version.outputs.suffix }}
        run:  |
          dotnet pack ./framework_modules/Geex.Casbin/src/Geex.Casbin.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MongoDB.Entities/src/Geex.MongoDB.Entities.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common/src/Geex.Extensions.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Abstractions/src/Geex.Abstractions.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.AuditLogs/src/Geex.Extensions.AuditLogs.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Analyzer/src/Geex.Analyzer.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Accounting/src/Geex.Extensions.Accounting.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Authentication/src/Geex.Extensions.Authentication.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Authorization/src/Geex.Extensions.Authorization.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.BackgroundJob/src/Geex.Extensions.BackgroundJob.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.BlobStorage/src/Geex.Extensions.BlobStorage.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Identity/src/Geex.Extensions.Identity.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Logging/src/Geex.Extensions.Logging.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Messaging/src/Geex.Extensions.Messaging.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.MultiTenant/src/Geex.Extensions.MultiTenant.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Extensions.Settings/src/Geex.Extensions.Settings.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MediatX/MediatX/MediatX.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.MediatX/MediatX.RabbitMQ/MediatX.RabbitMQ.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
