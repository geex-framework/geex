name: publish
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish-nuget-package:
    runs-on: ubuntu-latest
    steps:
      - name: Extract variables
        id: version
        run: |
          echo "Ref name is $GITHUB_REF"
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "::set-output name=version::$VERSION"
          if [[ "$VERSION" =~ ^([0-9|\.]+)-?([a-z]+[0-9]*)?$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
            SUFFIX="${BASH_REMATCH[2]}"
            echo "Extracted version and suffix frm prerelease tag."
            echo "::set-output name=version::$VERSION"
            echo "::set-output name=suffix::$SUFFIX"
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.203
          
      - name: Restore dependencies
        run: dotnet restore ./framework_modules/framework_modules.sln
        
      - name: Build projects
        run: dotnet build --configuration Release ./framework_modules/framework_modules.sln
        
      - name: Generate NuGet release packages
        env:
          VERSION: ${{ steps.version.outputs.version }}
          SUFFIX: ${{ steps.version.outputs.suffix }}
        run:  |
          dotnet pack ./framework_modules/Geex.Casbin/src/Geex.Casbin.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{steps.version.outputs.VERSION}}
          dotnet pack ./framework_modules/Geex.MongoDB.Entities/src/Geex.MongoDB.Entities.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common/src/Geex.Common.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Abstraction/src/Geex.Common.Abstraction.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Accounting/src/Geex.Common.Accounting.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Authentication/src/Geex.Common.Authentication.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Authorization/src/Geex.Common.Authorization.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.BackgroundJob/src/Geex.Common.BackgroundJob.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.BlobStorage/src/Geex.Common.BlobStorage.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Identity/src/Geex.Common.Identity.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Logging/src/Geex.Common.Logging.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Messaging/src/Geex.Common.Messaging.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.MultiTenant/src/Geex.Common.MultiTenant.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}
          dotnet pack ./framework_modules/Geex.Common.Settings/src/Geex.Common.Settings.csproj --configuration Release --no-build --version-suffix ${{env.SUFFIX}} --output ./nupkg /p:PackageVersion=${{env.VERSION}}

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
