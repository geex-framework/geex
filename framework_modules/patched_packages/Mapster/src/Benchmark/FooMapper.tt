<#@ template debug="true" language="C#" #>
<#@ output extension=".g.cs" #>
<# /*@ Assembly Name="/usr/local/share/dotnet/sdk/2.2.103/Microsoft/Microsoft.NET.Build.Extensions/net461/lib/netstandard.dll" */ #>
<#@ Assembly Name="netstandard" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Runtime" #>
<#@ Assembly Name="System.Linq.Expressions" #>
<#@ Assembly Name="$(TargetDir)/Benchmark.dll" #>
<#@ Assembly Name="$(TargetDir)/Mapster.dll" #>
<#@ Assembly Name="$(TargetDir)/ExpressionTranslator.dll" #>
<#@ import namespace="Benchmark.Classes" #>
<#@ import namespace="ExpressionDebugger" #>
<#@ import namespace="Mapster" #>
<# 
    TypeAdapterConfig.GlobalSettings.SelfContainedCodeGeneration = true;
    var foo = default(Foo);
    var def = new ExpressionDefinitions
    {
        IsStatic = true,
        MethodName = "Map",
        Namespace = "Benchmark",
        TypeName = "FooMapper"
    };
    var code = foo.BuildAdapter()
        .CreateMapExpression<Foo>()
        .ToScript(def);
    code = code.Replace("TypeAdapter<Foo, Foo>.Map.Invoke", "Map");
    WriteLine(code);
#>